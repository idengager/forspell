#!/usr/bin/env ruby
require 'yaml'
require 'csv'
require 'pry'

class DictionaryCreator
  attr_reader :result

  def initialize(path: 'test/popular_gems/')
    @path = path
    @data = {}
    @result = {}
  end

  def process
    (Dir.entries(@path) - ['.', '..']).each do |filename|
      @data[filename] = File.read("#{@path}#{filename}")
    end

    @data.each_pair do |log_filename, data|
      next if data == false

      gem_name = log_filename.split('.').first
      data.split(/\n/).each do |error_with_count|
        error, count = error_with_count.split(' # ')
        count = count.to_i
        if @result[error]
          @result[error] = @result[error].merge(count: @result.dig(error, :count) + count, gems: (@result.dig(error, :gems) + [gem_name]).uniq)
        else
          @result[error] = { count: count, gems: [gem_name] }
        end
      end
    end

    self
  end
end

CSV.open('ruby_dict_sort.csv', 'wb') do |csv|
  csv << ['word', 'count', 'gems', 'should_include?']
  res = DictionaryCreator.new.process.result
  res.keys.sort.each do |word|
    csv << [word, res[word][:count], res[word][:gems].join(', '), nil]
  end
end
